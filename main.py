import asyncio
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram import Bot, Dispatcher, types, executor
import keyboards
TOKEN = '5913399795:AAEUP-slfC2rMUugkOoU0MEW_CnqnIrCezA'

storage = MemoryStorage()
bot = Bot(token = TOKEN)
dp = Dispatcher(bot=bot, storage=storage)

#class Dialog(StatesGroup:
@dp.message_handler(commands='start')
async def start(msg: types.Message):
    await msg.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –º–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞–∫—Å–∏–º üëã\n–Ø –Ω–∞—á–∏–Ω–∞—é—â–∏–π Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üí°\n–ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –º–Ω–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ üëáüëáüëá", reply_markup=keyboards.main_keyboard()) 


@dp.callback_query_handler(text="gallery")
async def one_of_all(query: types.CallbackQuery):
    user_id = query.message.chat.id
    await query.message.delete()
    media = types.MediaGroup()
    media.attach_photo(types.InputFile('gallery/pic1.JPG'))
    media.attach_photo(types.InputFile('gallery/pic2.JPG'))
    await bot.send_media_group(user_id, media=media)
    await bot.send_message(user_id, '–ú–æ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏üì∑', reply_markup=keyboards.back_keyboard())






@dp.callback_query_handler(text="techno")
async def one_of_all(query: types.CallbackQuery):
    user_id = query.message.chat.id
    await query.message.delete()
    await bot.send_message(user_id, """–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ —è —É–∂–µ –∏–∑—É—á–∏–ª üìö\n
1. aiogram - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–æ–≤ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º‚úàÔ∏è
2. bs4 –∏ selenium - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —Å–æ–±–∏—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–æ–≤
3. SQLite - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–æ–∑–≤–æ–ª—è—é—â–∞—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
4. –ë–∞–∑–æ–≤–æ–µ –∑–Ω–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤
5. GIT \n\n
–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–±–∏—Ä–∞—é—Å—å —É—á–∏—Ç—å üìñ\n
1. SQL - –æ–±—ã—á–Ω—ã–π —è–∑—ã–∫ SQL –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö üíæ
2. Docker - –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö —Å —É–¥–æ–±—Å—Ç–≤–æ–º –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å—é
3. Alembic - –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö
4. Django -–§—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è Backend-a —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Å–∞–π—Ç—ã –∏ –≤–µ–± –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è üñ•""", reply_markup=keyboards.back_keyboard())


@dp.callback_query_handler(text="impact")
async def one_of_all(query: types.CallbackQuery):
    user_id = query.message.chat.id
    await query.message.delete()
    await bot.send_message(user_id, """–ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ωüí°\n
1. –†–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ –∏ –ø–∏—Å–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—èü§ù\n
2. –ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ü§ñ\n
3. –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ–µ –∫ –≤–∞—à–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –∏–ª–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç—Éüíæ""", reply_markup=keyboards.back_keyboard())

@dp.callback_query_handler(text="contact")
async def one_of_all(query: types.CallbackQuery):
    user_id = query.message.chat.id
    await query.message.delete()
    await bot.send_message(user_id, "Telegram: https://t.me/Qwiple51 üì±\n\n VK: https://vk.com/qwiple_lare üíª\n\n GITHUB: https://github.com/Qwiple123 üñ•", reply_markup=keyboards.back_keyboard())

@dp.callback_query_handler(text="projects")
async def one_of_all(query: types.CallbackQuery):
    user_id = query.message.chat.id
    await query.message.delete()
    await bot.send_message(user_id, "–ü–æ–∫–∞ —É –º–µ–Ω—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –º–∞–ª–µ–Ω—å–∫–∏–π pet-–ø—Ä–æ–µ–∫—Ç —ç—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ö–∞—Ä–µ–Ω\n–í–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º –Ω–∞ GITHUB\nhttps://github.com/Qwiple123/Karen-Voice-Assistant", reply_markup=keyboards.back_keyboard())


@dp.callback_query_handler(text="back")
async def one_of_all(query: types.CallbackQuery):
    user_id = query.message.chat.id
    await query.message.delete()
    await bot.send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboards.main_keyboard())


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)